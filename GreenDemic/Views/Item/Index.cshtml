@model IEnumerable<GreenDemic.Models.ItemViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1 style="padding-top: 100px; padding-bottom: 50px; text-align: center; margin-left: auto; margin-right: auto; font-size: 5vw;">View Items</h1>

<div class="container-fluid align-items-center justify-content-center" style="padding-left: 3%; padding-right: 3%; font-size: 1.7vw;">
    <p>
        <a asp-action="Barcode" asp-route-id="@ViewData["ShoppingBagId"]">Create New Item |</a>
        @{
            if ((int)ViewData["UsedPreset"] == 0)
            {
                <a asp-controller="ShoppingBag" asp-action="ShowPresetBags" asp-route-id="@ViewData["ShoppingBagId"]">Import From Preset |</a>
            }
            else
            {
                <a style="color:black;text-decoration:none;">Import From Preset |</a>
            }
        }
    </p>
    <table id="myTable" class="table table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ItemName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Qty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CalSubTotal)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Qty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CalSubTotal)
                    </td>
                    <td>
                        <a asp-action="Delete" asp-controller="Item"
                           asp-route-id="@item.ItemID" asp-route-sbID="@ViewData["ShoppingBagId"]">Delete </a><span>|</span>
                        @{
                            List<int> idList = ViewData["IDList"] as List<int>;
                            if (idList.Contains(item.ItemID))
                            {
                                        <a style="color:black; text-decoration:none;">Edit |</a>
                            }
                            else
                            {
                                        <a asp-action="Edit" asp-controller="Item"
                                           asp-route-id="@item.ItemID" asp-route-sbID="@ViewData["ShoppingBagId"]" asp-route-IsPreset="false">Edit </a><span>|</span>
                                }
                            }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p>
        <a asp-action="Index" asp-controller="ShoppingBag">Back to shopping bags</a>
    </p>
</div>

@section Scripts {
    <script>
        $('#myTable').DataTable({
            "columnDefs": [
                { "orderable": false, "targets": 5 }
            ]
        });
    </script>
}
